---
import SiteOptions from "../site.config.mjs"
import { getLangFromUrl, useTranslations } from "../i18n/config";

export interface Props {
  page: {
    data: any[]
    url: {
      current: string
      next?: string
      prev?: string
    }
    currentPage: number
    lastPage: number
    size: number
    total: number
  }
}

const { page } = Astro.props;
const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);

// Generate language-specific URLs
const getLangUrl = (path: string) => {
  return currentLang === 'zh' ? path : `/${currentLang}${path}`;
};
---

<nav class="flex justify-center items-center space-x-4 mt-12" aria-label="Pagination Navigation">
  <!-- Previous Button -->
  {
    SiteOptions.pagination.showPrevNext &&
      (page.url.prev ? (
        <a href={page.url.prev} class="px-4 py-2 text-sm font-medium text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 border border-gray-300 dark:border-gray-600 rounded-md hover:border-gray-400 dark:hover:border-gray-500 transition-colors" aria-label="Go to previous page">
          ← {t('pagination.prevText')}
        </a>
      ) : (
        <span class="px-4 py-2 text-sm font-medium text-gray-400 dark:text-gray-600 border border-gray-200 dark:border-gray-700 rounded-md cursor-not-allowed">← {t('pagination.prevText')}</span>
      ))
  }

  <!-- Page Numbers -->
  <div class="flex items-center space-x-2">
    {
      Array.from({ length: page.lastPage }, (_, i) => i + 1).map((pageNum) => {
        const isCurrentPage = pageNum === page.currentPage
        const pageUrl = pageNum === 1 ? getLangUrl("/blog/") : getLangUrl(`/blog/${pageNum}/`)

        return isCurrentPage ? (
          <span class="px-3 py-2 text-sm font-medium bg-gray-900 dark:bg-gray-100 text-white dark:text-gray-900 rounded-md" aria-current="page">
            {pageNum}
          </span>
        ) : (
          <a href={pageUrl} class="px-3 py-2 text-sm font-medium text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 hover:bg-gray-100 dark:hover:bg-gray-800 rounded-md transition-colors" aria-label={`Go to page ${pageNum}`}>
            {pageNum}
          </a>
        )
      })
    }
  </div>

  <!-- Next Button -->
  {
    SiteOptions.pagination.showPrevNext &&
      (page.url.next ? (
        <a href={page.url.next} class="px-4 py-2 text-sm font-medium text-gray-600 dark:text-gray-400 hover:text-gray-900 dark:hover:text-gray-100 border border-gray-300 dark:border-gray-600 rounded-md hover:border-gray-400 dark:hover:border-gray-500 transition-colors" aria-label="Go to next page">
          {t('pagination.nextText')} →
        </a>
      ) : (
        <span class="px-4 py-2 text-sm font-medium text-gray-400 dark:text-gray-600 border border-gray-200 dark:border-gray-700 rounded-md cursor-not-allowed">{t('pagination.nextText')} →</span>
      ))
  }
</nav>

<!-- Pagination Info -->
<div class="text-center mt-4 text-sm text-gray-500 dark:text-gray-400">
  Showing {(page.currentPage - 1) * page.size + 1} to {Math.min(page.currentPage * page.size, page.total)} of {page.total}
  {t('pagination.postLabel')}
</div>
