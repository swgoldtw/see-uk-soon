---
import { type CollectionEntry } from "astro:content"
import SiteOptions from "../site.config.mjs"
import { getLangFromUrl, useTranslations } from "../i18n/config";

export interface Props {
  post: CollectionEntry<"article">
}

const { post } = Astro.props;
const { title, description, thumb } = post.data;
const currentLang = getLangFromUrl(Astro.url);
const t = useTranslations(currentLang);

// Generate language-specific URLs
const getLangUrl = (path: string) => {
  return currentLang === 'zh' ? path : `/${currentLang}${path}`;
};

// Handle article URLs based on language and folder structure
const getArticleUrl = (slug: string) => {
  if (currentLang === 'zh') {
    // For Chinese, if the article is in en folder, skip it (shouldn't happen with proper filtering)
    if (slug.startsWith('en/')) {
      return getLangUrl(`/article/${slug.replace('en/', '')}`);
    }
    // For Chinese articles in root, use the slug as is
    return getLangUrl(`/article/${slug}`);
  } else {
    // For English, if the article is in en folder, remove the en/ prefix
    if (slug.startsWith('en/')) {
      return getLangUrl(`/article/${slug.replace('en/', '')}`);
    }
  }
  // Fallback
  return getLangUrl(`/article/${slug}`);
};
---

<article class="bg-gray-50 dark:bg-slate-800 rounded-lg shadow-sm p-6 flex flex-col items-start">
  {
    SiteOptions.showThumbnailOnFeaturedPosts && thumb && (
      <a href={getArticleUrl(post.slug)} class="w-full">
        <img src={thumb} alt={title} class="w-full h-auto object-cover rounded mb-4" />
      </a>
    )
  }
  <h3 class="text-xl font-bold mb-2"><a href={getArticleUrl(post.slug)}>{title}</a></h3>
  <p class="text-gray-500 dark:text-gray-400 text-sm mb-4 flex-grow">{description}</p>
  {
    SiteOptions.showReadMoreLinkOnFeaturedPosts && (
      <a href={getArticleUrl(post.slug)} class="text-black dark:text-white underline text-sm mt-auto self-start">
        {t('labels.readMore')}
      </a>
    )
  }
</article>
