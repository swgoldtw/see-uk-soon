---
import { type CollectionEntry, getCollection } from "astro:content"
import BlogLayout from "../../../layouts/BlogLayout.astro"
import Header from "../../../components/Header.astro"
import Footer from "../../../components/Footer.astro"
import FeaturedCard from "../../../components/FeaturedCard.astro"
import SiteOptions from "../../../site.config.mjs"
import { getLangFromUrl, useTranslations } from "../../../i18n/config";

export async function getStaticPaths() {
  const posts = await getCollection("article")
  
  const paths = []
  
  // Generate paths for English articles (not in zh folder)
  const englishPosts = posts.filter(post => !post.slug.startsWith('zh/'))
  englishPosts.forEach((post) => {
    paths.push({
      params: { 
        lang: undefined,
        slug: post.slug 
      },
      props: post,
    })
  })
  
  // Generate paths for Chinese articles (in zh folder)
  const chinesePosts = posts.filter(post => post.slug.startsWith('zh/'))
  chinesePosts.forEach((post) => {
    paths.push({
      params: { 
        lang: 'zh',
        slug: post.slug.replace('zh/', '') // Remove zh/ prefix for URL
      },
      props: post,
    })
  })
  
  return paths
}

type Props = CollectionEntry<"article">

const { lang } = Astro.params
const currentLang = lang || 'en'
const post = Astro.props
const { title, pubDate, category, description, tags, large } = post.data
const { Content } = await post.render()
const t = useTranslations(currentLang as 'en' | 'zh');

// Get similar posts (same category, same language, excluding current post)
const allPosts = await getCollection("article")
const currentLangPosts = allPosts.filter(p => {
  if (currentLang === 'zh') {
    return p.slug.startsWith('zh/');
  } else {
    return !p.slug.startsWith('zh/');
  }
});

const similarPosts = currentLangPosts.filter((p) => 
  p.slug !== post.slug && p.data.category === post.data.category
).slice(0, 3)

// Format date based on language
const dateOptions = {
  year: "numeric" as const,
  month: "long" as const,
  day: "numeric" as const,
};

const formattedDate = new Intl.DateTimeFormat(
  currentLang === 'zh' ? 'zh-CN' : 'en-US', 
  dateOptions
).format(pubDate);

// Generate language-specific URLs
const getLangUrl = (path: string) => {
  return currentLang === 'en' ? path : `/${currentLang}${path}`;
};
---

<BlogLayout title={title} description={description}>
  <Header showTitle={true} />

  <!-- Light Horizontal Bar -->
  <hr class="border-t border-gray-200 dark:border-gray-700 my-8" />

  <!-- Blog Post Header -->
  <header class="mb-8 relative">
    <h1 class="text-3xl md:text-4xl lg:text-3xl font-bold tracking-tight mb-4 text-gray-900 dark:text-slate-100">
      {title}
    </h1>
    <div class="flex flex-wrap items-center text-sm text-gray-500 dark:text-gray-400 space-x-4 mb-4">
      <span>{formattedDate}</span>
      {
        category && (
          <span>
            {t('labels.postedIn')}
            <a href={getLangUrl(`/category/${category.toLowerCase().replace(/\s+/g, "-")}`)} class="text-gray-500 dark:text-gray-400 hover:underline no-underline">
              <strong>{category}</strong>
            </a>
          </span>
        )
      }
    </div>
    <div class="text-sm text-gray-500 dark:text-gray-400">
      Tags:
      {
        tags.map((tag) => (
          <a href={getLangUrl(`/tag/${tag.toLowerCase().replace(/\s+/g, "-")}`)} class="bg-gray-100 text-gray-600 dark:bg-slate-700 dark:text-slate-300 px-2 py-1 rounded hover:bg-gray-200 dark:hover:bg-slate-600 ml-1 no-underline hover:underline">
            {tag}
          </a>
        ))
      }
    </div>
  </header>

  <!-- Blog Post Content -->
  <article class="mt-10 prose prose-h2:text-2xl prose-lg max-w-none text-gray-700 dark:prose-strong:text-slate-100 dark:text-slate-300 prose-headings:text-gray-900 dark:prose-headings:text-slate-100 prose-a:text-blue-600 dark:prose-a:text-blue-400 prose-code:text-slate-700 dark:prose-code:text-slate-100 prose-pre:bg-gray-100 dark:prose-pre:bg-slate-800 prose-blockquote:border-gray-300 dark:prose-blockquote:border-gray-600 prose-blockquote:text-gray-600 dark:prose-blockquote:text-gray-400 prose-h3:text-[1.2em] ">
    <!-- Show featured image -->
    {
      large && (
        <div class="mb-8">
          <img src={large} alt={title} class="w-full h-auto rounded-lg shadow-md" />
        </div>
      )
    }
    <Content />
  </article>


  <!-- Similar Posts Section -->
  {
    SiteOptions.showSimilarPosts && similarPosts.length > 0 && (
    <hr class="border-t border-gray-200 dark:border-gray-700 my-12" />
      <section>
        <h2 class="text-2xl font-semibold mb-8 text-center text-gray-800 dark:text-slate-200">{t('labels.youMightAlsoLike')}</h2>
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-8">
          {similarPosts.map((similarPost) => (
            <FeaturedCard post={similarPost} />
          ))}
        </div>
      </section>
    )
  }

  <!-- Minimal Footer -->
  <Footer/>
</BlogLayout> 