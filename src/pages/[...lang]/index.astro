---
import { getCollection } from "astro:content"
import BlogLayout from "../../layouts/BlogLayout.astro"
import Header from "../../components/Header.astro"
import Footer from "../../components/Footer.astro"
import PostCard from "../../components/PostCard.astro"
import FeaturedCard from "../../components/FeaturedCard.astro"
import SiteOptions from "../../site.config.mjs"
import { getLangFromUrl, useTranslations } from "../../i18n/config";

export async function getStaticPaths() {
  return [
    { params: { lang: undefined } }, // /
    { params: { lang: 'zh' } },      // /zh
  ]
}

const { lang } = Astro.params
const currentLang = lang || 'en'
const t = useTranslations(currentLang as 'en' | 'zh');

// Get all articles and filter by language based on folder structure
const allPosts = await getCollection("article")
const currentLangPosts = allPosts.filter(post => {
  if (currentLang === 'zh') {
    // For Chinese, only show articles in the zh folder
    return post.slug.startsWith('zh/');
  } else {
    // For English, only show articles NOT in the zh folder
    return !post.slug.startsWith('zh/');
  }
});

const sortedPosts = currentLangPosts.sort((a, b) => new Date(b.data.pubDate).valueOf() - new Date(a.data.pubDate).valueOf())

// Get featured posts
const featuredPosts = currentLangPosts.filter((post) => post.data.featured).slice(0, 3)

// Get latest posts for homepage (limit to 6)
const latestPosts = sortedPosts.slice(0, SiteOptions.numberOfLatestPostsOnHomePage || 6)
const showCategory = SiteOptions.showCategoryOnPosts || false

// Generate language-specific URLs
const getLangUrl = (path: string) => {
  return currentLang === 'en' ? path : `/${currentLang}${path}`;
};
---

<BlogLayout title={t('site.title')}>
  <Header />

  <!-- Light Horizontal Bar -->
  <hr class="border-t border-gray-200 dark:border-gray-700 my-8" />

  <!-- Featured Blog Posts -->

  {
    SiteOptions.showFeaturrdPostsOnHomePage && featuredPosts.length > 0 && (
      <section class="mb-16">
        {t('labels.featuredPosts') && <h2 class="text-2xl font-semibold mb-8 text-center">{t('labels.featuredPosts')}</h2>}
        <div class="grid grid-cols-1 md:grid-cols-3 gap-8">
          {featuredPosts.map((post) => (
            <FeaturedCard post={post} />
          ))}
        </div>
        <hr class="border-t border-gray-200 dark:border-gray-700 my-12" />
      </section>
    )
  }

  <!-- Latest Blog Posts -->
  <section>
    {t('labels.latestPosts') && <h2 class="text-2xl font-semibold mb-8 text-center">{t('labels.latestPosts')}</h2>}
    <ul class="space-y-4">
      {latestPosts.map((post) => <PostCard post={post} showCategory={showCategory} />)}
    </ul>

    <!-- View All Posts Link -->
    {
      sortedPosts.length > 6 && (
        <div class="text-center mt-8">
          <a href={getLangUrl('/blog/')} class="inline-flex items-center px-6 py-3 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-800 hover:bg-gray-200 dark:hover:bg-gray-700 rounded-md transition-colors">
            {/* View All Posts ({sortedPosts.length}) */}
            {t('labels.viewAllPosts')}
            <svg class="ml-2 w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
            </svg>
          </a>
        </div>
      )
    }

    <!-- Minimal Footer -->
    <Footer />
  </section>
</BlogLayout> 